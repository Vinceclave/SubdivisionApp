@{
    Layout = "~/Views/Shared/Dashboard_Layout.cshtml";
    ViewData["Title"] = "Billing";

     // Fix nullable warning
    string userRole = ViewBag.UserRole as string ?? "Guest";
}

<div class="container mx-auto px-4 py-6">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-800">Billing & Payment</h1>
        <div class="relative">
            <div class="flex items-center border rounded-md bg-white">
                <span class="p-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                </span>
                <input type="text" placeholder="Search" class="py-2 px-1 outline-none w-56">
            </div>
        </div>
    </div>

    <div class="bg-white rounded-md shadow-sm mb-6">
        <div class="flex mb-4 p-2">
            <button id="tab-all" class="tab-button rounded-lg py-1 px-4 font-medium text-sm" onclick="changeTab('all')">All (4)</button>
            <button id="tab-pending" class="tab-button rounded-lg py-1 px-4 font-medium text-sm" onclick="changeTab('pending')">Pending (1)</button>
            <button id="tab-paid" class="tab-button rounded-lg py-1 px-4 font-medium text-sm" onclick="changeTab('paid')">Paid (2)</button>
            <button id="tab-overdue" class="tab-button rounded-lg py-1 px-4 font-medium text-sm" onclick="changeTab('overdue')">Overdue (1)</button>
        </div>

        <div class="overflow-x-auto">
            <table class="min-w-full border-collapse">
                <thead>
                    <tr class="border-b">
                        <th class="py-3 px-4 text-left font-medium text-gray-600">Bill Type</th>
                        <th class="py-3 px-4 text-left font-medium text-gray-600">Due Amount</th>
                        <th class="py-3 px-4 text-left font-medium text-gray-600">Due Date</th>
                        <th class="py-3 px-4 text-left font-medium text-gray-600">Status</th>
                        <th class="py-3 px-4 text-left font-medium text-gray-600">Action</th>
                    </tr>
                </thead>
                <tbody id="billing-table-body">
                    <!-- Table content will be populated by JavaScript -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Payment Modal -->
<div id="payment-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-md shadow-lg w-full max-w-md relative">
        <div class="p-6">
            <h2 class="text-xl font-semibold mb-4">Billing Summary</h2>
            
            <div id="bill-details" class="mb-6">
                <div class="flex items-center mb-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                    </svg>
                    <span class="font-medium" id="bill-type-modal">Electricity Bill</span>
                    <span class="ml-auto px-2 py-1 rounded text-xs font-medium bg-yellow-200 text-yellow-800" id="bill-status-modal">UNPAID</span>
                </div>
                
                <div class="grid grid-cols-2 gap-2 ml-7">
                    <div>
                        <p class="text-sm text-gray-600">DUE DATE :</p>
                        <p class="text-sm text-gray-600">DUE AMOUNT :</p>
                    </div>
                    <div>
                        <p class="text-sm" id="due-date-modal">02/14/25</p>
                        <p class="text-sm" id="due-amount-modal">₱ 1,500</p>
                    </div>
                </div>
            </div>
            
            <h3 class="text-lg font-medium mb-4">Mode of Payment</h3>
            
            <div class="mb-4">
                <div class="flex mb-3">
                    <label class="inline-flex items-center mr-4">
                        <input type="radio" name="payment-method" value="card" class="mr-2" checked>
                        <span class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                            </svg>
                            Credit / Debit Card
                        </span>
                    </label>
                    <label class="inline-flex items-center mr-4">
                        <input type="radio" name="payment-method" value="online" class="mr-2">
                        <span class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                            </svg>
                            Online Banking
                        </span>
                    </label>
                </div>
                
                <div id="card-payment-form">
                    <div class="mb-3">
                        <label class="block text-sm text-gray-600 mb-1">Card Number</label>
                        <input type="text" class="w-full border rounded px-3 py-2" placeholder="0000 0000 0000 0000">
                    </div>
                    <div class="mb-3">
                        <label class="block text-sm text-gray-600 mb-1">Card Holder Name</label>
                        <input type="text" class="w-full border rounded px-3 py-2" placeholder="Name">
                    </div>
                    <div class="grid grid-cols-2 gap-3 mb-3">
                        <div>
                            <label class="block text-sm text-gray-600 mb-1">Expiry Date</label>
                            <input type="text" class="w-full border rounded px-3 py-2" placeholder="MM/YY">
                        </div>
                        <div>
                            <label class="block text-sm text-gray-600 mb-1">CVV</label>
                            <input type="text" class="w-full border rounded px-3 py-2" placeholder="123">
                        </div>
                    </div>
                </div>

                <div id="online-banking-form" class="hidden">
                    <div class="mb-3">
                        <label class="block text-sm text-gray-600 mb-1">Banking Name</label>
                        <select class="w-full border rounded px-3 py-2">
                            <option value="" disabled selected>Select a bank</option>
                            <option value="bdo">BDO</option>
                            <option value="bpi">BPI</option>
                            <option value="metrobank">Metrobank</option>
                            <option value="unionbank">UnionBank</option>
                            <option value="gcash">GCash</option>
                            <option value="paymaya">PayMaya</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="block text-sm text-gray-600 mb-1">Account Holder Name</label>
                        <input type="text" class="w-full border rounded px-3 py-2" placeholder="Name">
                    </div>
                    <div class="grid grid-cols-2 gap-3 mb-3">
                        <div>
                            <label class="block text-sm text-gray-600 mb-1">Account Number</label>
                            <input type="text" class="w-full border rounded px-3 py-2" placeholder="Account Number">
                        </div>
                        <div>
                            <label class="block text-sm text-gray-600 mb-1">Transaction Reference No.</label>
                            <input type="text" class="w-full border rounded px-3 py-2" placeholder="Reference Number">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="block text-sm text-gray-600 mb-1">Proof of Payment</label>
                        <div class="mt-1 flex items-center">
                            <button type="button" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                                Upload Receipt
                            </button>
                            <span class="ml-2 text-sm text-gray-500" id="file-name">No file selected</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="flex justify-end">
                <button id="cancel-payment" class="px-4 py-2 mr-2 text-gray-600 border rounded">Cancel</button>
                <button id="confirm-payment" class="px-4 py-2 text-white rounded bg-green-700 hover:bg-green-800">PAY NOW</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Billing data
    const billingData = [
        { billType: "Internet", dueAmount: "2,000", dueDate: "03/25/25", status: "UNPAID" },
        { billType: "Electricity", dueAmount: "2,000", dueDate: "03/25/25", status: "PAID" },
        { billType: "Water", dueAmount: "2,000", dueDate: "03/25/25", status: "OVERDUE" },
        { billType: "Maintenance", dueAmount: "2,000", dueDate: "03/25/25", status: "PAID" }
    ];

    // Render table based on active tab
    function renderTable(filter = null) {
        const tableBody = document.getElementById('billing-table-body');
        tableBody.innerHTML = '';
        
        const filteredData = filter ? billingData.filter(item => item.status === filter) : billingData;
        
        filteredData.forEach((bill, index) => {
            const row = document.createElement('tr');
            row.className = 'border-b hover:bg-gray-50';
            
            let statusClass = '';
            let actionButton = '';
            
            if (bill.status === 'PAID') {
                statusClass = 'bg-green-200 text-green-800';
                actionButton = '<button class="text-blue-600 hover:text-blue-800">View Receipt</button>';
            } else if (bill.status === 'UNPAID') {
                statusClass = 'bg-yellow-200 text-yellow-800';
                actionButton = `<button class="text-green-600 hover:text-green-800 pay-now-btn" data-index="${index}">Pay Now</button>`;
            } else if (bill.status === 'OVERDUE') {
                statusClass = 'bg-red-200 text-red-800';
                actionButton = `<button class="text-green-600 hover:text-green-800 pay-now-btn" data-index="${index}">Pay Now</button>`;
            }
            
            row.innerHTML = `
                <td class="py-3 px-4">${bill.billType}</td>
                <td class="py-3 px-4">${bill.dueAmount}</td>
                <td class="py-3 px-4">${bill.dueDate}</td>
                <td class="py-3 px-4">
                    <span class="px-2 py-1 rounded text-xs font-medium ${statusClass}">
                        ${bill.status}
                    </span>
                </td>
                <td class="py-3 px-4">
                    ${actionButton}
                </td>
            `;
            
            tableBody.appendChild(row);
        });
        
        // Add event listeners to Pay Now buttons
        document.querySelectorAll('.pay-now-btn').forEach(button => {
            button.addEventListener('click', function() {
                const index = this.getAttribute('data-index');
                openPaymentModal(billingData[index]);
            });
        });
    }

    // Open payment modal
    function openPaymentModal(bill) {
        // Set bill details in modal
        document.getElementById('bill-type-modal').textContent = bill.billType + ' Bill';
        document.getElementById('bill-status-modal').textContent = bill.status;
        document.getElementById('due-date-modal').textContent = bill.dueDate;
        document.getElementById('due-amount-modal').textContent = '₱ ' + bill.dueAmount;
        
        // Reset payment method selection
        document.querySelector('input[name="payment-method"][value="card"]').checked = true;
        togglePaymentForms('card');
        
        // Show modal
        document.getElementById('payment-modal').classList.remove('hidden');
    }

    // Toggle payment forms based on selected method
    function togglePaymentForms(method) {
        const cardForm = document.getElementById('card-payment-form');
        const onlineForm = document.getElementById('online-banking-form');
        
        if (method === 'card') {
            cardForm.classList.remove('hidden');
            onlineForm.classList.add('hidden');
        } else {
            cardForm.classList.add('hidden');
            onlineForm.classList.remove('hidden');
        }
    }

    // Change tab
    function changeTab(tabName) {
        // Reset all tabs
        document.querySelectorAll('.tab-button').forEach(tab => {
            tab.classList.remove('bg-blue-100');
        });
        
        // Activate selected tab
        document.getElementById(`tab-${tabName}`).classList.add('bg-blue-100');
        
        // Filter data based on tab
        switch(tabName) {
            case 'pending':
                renderTable('UNPAID');
                break;
            case 'paid':
                renderTable('PAID');
                break;
            case 'overdue':
                renderTable('OVERDUE');
                break;
            default:
                renderTable();
        }
    }

    // Initialize page
    document.addEventListener('DOMContentLoaded', () => {
        // Set "All" tab as default
        document.getElementById('tab-all').classList.add('bg-blue-100');
        renderTable();
        
        // Modal event listeners
        const paymentModal = document.getElementById('payment-modal');
        
        // Cancel button
        document.getElementById('cancel-payment').addEventListener('click', () => {
            paymentModal.classList.add('hidden');
        });
        
        // Confirm payment button
        document.getElementById('confirm-payment').addEventListener('click', () => {
            alert('Payment successful!');
            paymentModal.classList.add('hidden');
            // Refresh table (in a real app, you would update the data)
            renderTable();
        });
        
        // Close modal when clicking outside
        paymentModal.addEventListener('click', (event) => {
            if (event.target === paymentModal) {
                paymentModal.classList.add('hidden');
            }
        });
        
        // Payment method change handlers
        document.querySelectorAll('input[name="payment-method"]').forEach(radio => {
            radio.addEventListener('change', function() {
                togglePaymentForms(this.value);
            });
        });
        
        // File upload handler
        const uploadButton = document.querySelector('button:contains("Upload Receipt")');
        if (uploadButton) {
            uploadButton.addEventListener('click', () => {
                const input = document.createElement('input');
                input.type = 'file';
                input.accept = 'image/*,.pdf';
                input.onchange = (e) => {
                    if (e.target.files.length > 0) {
                        document.getElementById('file-name').textContent = e.target.files[0].name;
                    }
                };
                input.click();
            });
        }
    });
</script>