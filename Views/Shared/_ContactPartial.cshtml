@model Subdivision.Models.User

<div class="space-y-6 p-4">
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-2xl font-semibold text-gray-900">Contact Information</h1>
            <p class="mt-1 text-sm text-gray-500">View and manage your contact information and emergency contacts.</p>
        </div>
    </div>

    <!-- Alert Messages -->
    <div id="alertContainer"></div>

    <div class="bg-white rounded-lg shadow">
        <div class="p-6">
            <!-- Primary Contact Information -->
            <div class="space-y-6">
                <div>
                    <h3 class="text-lg font-medium text-gray-900">Primary Contact Information</h3>
                    <div class="mt-4 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Full Name</label>
                            <p class="mt-1 text-sm text-gray-900">@Model.FirstName @Model.LastName</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Email Address</label>
                            <p class="mt-1 text-sm text-gray-900">@Model.Email</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Phone Number</label>
                            <p class="mt-1 text-sm text-gray-900">@Model.PhoneNumber</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Address</label>
                            <p class="mt-1 text-sm text-gray-900">@Model.Address</p>
                        </div>
                    </div>
                </div>

                <!-- Emergency Contacts -->
                <div class="border-t border-gray-200 pt-6">
                    <div class="flex items-center justify-between">
                        <h3 class="text-lg font-medium text-gray-900">Emergency Contacts</h3>
                        <button type="button" onclick="showAddContactModal()" 
                                class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-primary hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
                            <svg class="-ml-0.5 mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                            </svg>
                            Add Contact
                        </button>
                    </div>
                    <div class="mt-4">
                        <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg">
                            <table class="min-w-full divide-y divide-gray-300">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">Name</th>
                                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Relationship</th>
                                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Phone</th>
                                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Email</th>
                                        <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
                                            <span class="sr-only">Actions</span>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-200 bg-white">
                                    <!-- Sample emergency contact - Replace with actual data -->
                                    <tr>
                                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6">John Smith</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">Brother</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">+1 (555) 123-4567</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">john.smith@example.com</td>
                                        <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                                            <button type="button" onclick="editContact(1)" class="text-primary hover:text-primary/80 mr-4">Edit</button>
                                            <button type="button" onclick="deleteContact(1)" class="text-red-600 hover:text-red-900">Delete</button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Contact Preferences -->
                <div class="border-t border-gray-200 pt-6">
                    <h3 class="text-lg font-medium text-gray-900">Contact Preferences</h3>
                    <div class="mt-4 space-y-4">
                        <div class="flex items-start">
                            <div class="flex items-center h-5">
                                <input id="emailNotifications" name="emailNotifications" type="checkbox" checked
                                       class="h-4 w-4 text-primary border-gray-300 rounded focus:ring-primary">
                            </div>
                            <div class="ml-3 text-sm">
                                <label for="emailNotifications" class="font-medium text-gray-700">Email Notifications</label>
                                <p class="text-gray-500">Receive important updates and notifications via email</p>
                            </div>
                        </div>
                        <div class="flex items-start">
                            <div class="flex items-center h-5">
                                <input id="smsNotifications" name="smsNotifications" type="checkbox" checked
                                       class="h-4 w-4 text-primary border-gray-300 rounded focus:ring-primary">
                            </div>
                            <div class="ml-3 text-sm">
                                <label for="smsNotifications" class="font-medium text-gray-700">SMS Notifications</label>
                                <p class="text-gray-500">Receive urgent alerts and reminders via SMS</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Contact Modal -->
<div id="contactModal" class="hidden fixed z-10 inset-0 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6">
            <div>
                <div class="mt-3 text-center sm:mt-5">
                    <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">Add Emergency Contact</h3>
                    <div class="mt-4">
                        <form id="contactForm" class="space-y-4">
                            <div>
                                <label for="contactName" class="block text-sm font-medium text-gray-700">Full Name</label>
                                <input type="text" name="contactName" id="contactName" required
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary sm:text-sm">
                            </div>
                            <div>
                                <label for="relationship" class="block text-sm font-medium text-gray-700">Relationship</label>
                                <input type="text" name="relationship" id="relationship" required
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary sm:text-sm">
                            </div>
                            <div>
                                <label for="contactPhone" class="block text-sm font-medium text-gray-700">Phone Number</label>
                                <input type="tel" name="contactPhone" id="contactPhone" required
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary sm:text-sm">
                            </div>
                            <div>
                                <label for="contactEmail" class="block text-sm font-medium text-gray-700">Email Address</label>
                                <input type="email" name="contactEmail" id="contactEmail" required
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary sm:text-sm">
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense">
                <button type="button" onclick="saveContact()"
                        class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-primary text-base font-medium text-white hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary sm:col-start-2 sm:text-sm">
                    Save
                </button>
                <button type="button" onclick="hideContactModal()"
                        class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary sm:mt-0 sm:col-start-1 sm:text-sm">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Show alert message
        function showAlert(message, type = 'success') {
            const alertContainer = document.getElementById('alertContainer');
            const alert = document.createElement('div');
            alert.className = `rounded-md p-4 mb-4 ${type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'}`;
            alert.innerHTML = `
                <div class="flex">
                    <div class="flex-shrink-0">
                        ${type === 'success' 
                            ? '<svg class="h-5 w-5 text-green-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>'
                            : '<svg class="h-5 w-5 text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>'}
                    </div>
                    <div class="ml-3">
                        <p class="text-sm font-medium">${message}</p>
                    </div>
                    <div class="ml-auto pl-3">
                        <div class="-mx-1.5 -my-1.5">
                            <button type="button" onclick="this.parentElement.parentElement.parentElement.remove()" class="inline-flex rounded-md p-1.5 ${type === 'success' ? 'text-green-500 hover:bg-green-100' : 'text-red-500 hover:bg-red-100'} focus:outline-none">
                                <span class="sr-only">Dismiss</span>
                                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/></svg>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            alertContainer.appendChild(alert);
            setTimeout(() => alert.remove(), 5000);
        }

        // Contact Modal Functions
        function showAddContactModal() {
            document.getElementById('modal-title').textContent = 'Add Emergency Contact';
            document.getElementById('contactForm').reset();
            document.getElementById('contactModal').classList.remove('hidden');
        }

        function hideContactModal() {
            document.getElementById('contactModal').classList.add('hidden');
        }

        function editContact(contactId) {
            document.getElementById('modal-title').textContent = 'Edit Emergency Contact';
            // TODO: Fetch contact details and populate form
            document.getElementById('contactModal').classList.remove('hidden');
        }

        async function saveContact() {
            const form = document.getElementById('contactForm');
            const formData = new FormData(form);

            try {
                const response = await fetch('/@ViewData["UserType"].ToString().ToLower()/contact/save', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (response.ok) {
                    showAlert('Contact saved successfully!');
                    hideContactModal();
                    // TODO: Refresh contact list
                } else {
                    throw new Error(result.message || 'Failed to save contact');
                }
            } catch (error) {
                showAlert(error.message, 'error');
            }
        }

        async function deleteContact(contactId) {
            if (!confirm('Are you sure you want to delete this contact?')) {
                return;
            }

            try {
                const response = await fetch(`/@ViewData["UserType"].ToString().ToLower()/contact/delete/${contactId}`, {
                    method: 'DELETE'
                });

                const result = await response.json();

                if (response.ok) {
                    showAlert('Contact deleted successfully!');
                    // TODO: Remove contact from list
                } else {
                    throw new Error(result.message || 'Failed to delete contact');
                }
            } catch (error) {
                showAlert(error.message, 'error');
            }
        }

        // Show initial alerts from TempData
        @if (TempData["Success"] != null)
        {
            <text>showAlert('@TempData["Success"]');</text>
        }
        @if (TempData["Error"] != null)
        {
            <text>showAlert('@TempData["Error"]', 'error');</text>
        }
    </script>
} 