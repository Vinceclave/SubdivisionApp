@model List<Subdivision.Models.Bill>

@{
    ViewData["Title"] = "Billing Management";
    ViewData["UserType"] = "Admin";
    ViewData["Page"] = "Billing";
    Layout = "_UniversalLayout";
}

<div class="container mx-auto px-4 py-8">
    <div class="mb-6 flex justify-between items-center">
        <div>
            <h1 class="text-3xl font-bold text-gray-900">Billing Management</h1>
            <p class="text-gray-600 mt-2">Create and manage bills for homeowners</p>
        </div>
        <button onclick="showCreateBillModal()" class="bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark transition-colors">
            Create Bill
        </button>
    </div>

    <!-- Bills Table -->
    <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <div class="p-6">
            <table class="min-w-full divide-y divide-gray-200">
                <thead>
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bill ID</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Homeowner</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Due Date</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var bill in Model)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@bill.BillId</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                @(bill.Homeowner?.User?.FirstName + " " + bill.Homeowner?.User?.LastName)
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@bill.BillType</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">â‚±@bill.Amount.ToString("N2")</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@bill.DueDate.ToString("MM/dd/yyyy")</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 py-1 text-xs font-semibold rounded-full
                                    @(bill.Status == "Paid" ? "bg-green-100 text-green-800" :
                                    bill.Status == "Pending" ? "bg-yellow-100 text-yellow-800" :
                                    bill.Status == "Overdue" ? "bg-red-100 text-red-800" :
                                    "bg-gray-100 text-gray-800")">
                                    @bill.Status
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <button onclick="viewBillDetails(@bill.BillId)" class="text-primary hover:text-primary-dark mr-2">View</button>
                                <button onclick="viewPayments(@bill.BillId)" class="text-primary hover:text-primary-dark">Payments</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Create Bill Modal -->
<div id="createBillModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium leading-6 text-gray-900 mb-4">Create New Bill</h3>
            <form id="createBillForm" class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700">Homeowner</label>
                    <select id="homeownerId" name="homeownerId" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary">
                        <option value="">Select Homeowner</option>
                        <!-- Will be populated via JavaScript -->
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Bill Type</label>
                    <select id="billType" name="billType" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary">
                        <option value="">Select Type</option>
                        <option value="Association Dues">Association Dues</option>
                        <option value="Water">Water</option>
                        <option value="Electricity">Electricity</option>
                        <option value="Maintenance">Maintenance</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Amount</label>
                    <input type="number" id="amount" name="amount" step="0.01" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Due Date</label>
                    <input type="date" id="dueDate" name="dueDate" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary">
                </div>
                <div class="mt-5 flex justify-end space-x-2">
                    <button type="button" onclick="hideCreateBillModal()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md">Cancel</button>
                    <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-primary hover:bg-primary-dark rounded-md">Create Bill</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Bill Details Modal -->
<div id="billDetailsModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium leading-6 text-gray-900 mb-4">Bill Details</h3>
            <div id="billDetails" class="space-y-4">
                <!-- Will be populated via JavaScript -->
            </div>
            <div class="mt-5 flex justify-end">
                <button onclick="hideBillDetailsModal()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Show/Hide Modals
        function showCreateBillModal() {
            document.getElementById('createBillModal').classList.remove('hidden');
            loadHomeowners();
        }

        function hideCreateBillModal() {
            document.getElementById('createBillModal').classList.add('hidden');
        }

        function showBillDetailsModal() {
            document.getElementById('billDetailsModal').classList.remove('hidden');
        }

        function hideBillDetailsModal() {
            document.getElementById('billDetailsModal').classList.add('hidden');
        }

        // Load homeowners for the select dropdown
        async function loadHomeowners() {
            try {
                const response = await fetch('/api/homeowners');
                const homeowners = await response.json();
                const select = document.getElementById('homeownerId');
                select.innerHTML = '<option value="">Select Homeowner</option>';
                homeowners.forEach(homeowner => {
                    select.innerHTML += `<option value="${homeowner.homeownerId}">${homeowner.firstName} ${homeowner.lastName}</option>`;
                });
            } catch (error) {
                console.error('Error loading homeowners:', error);
            }
        }

        // Handle form submission
        document.getElementById('createBillForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = {
                homeownerId: parseInt(document.getElementById('homeownerId').value),
                billType: document.getElementById('billType').value,
                amount: parseFloat(document.getElementById('amount').value),
                dueDate: document.getElementById('dueDate').value
            };

            try {
                const response = await fetch('/admin/billing/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                const result = await response.json();
                if (response.ok) {
                    hideCreateBillModal();
                    window.location.reload();
                } else {
                    alert(result.message || 'Failed to create bill');
                }
            } catch (error) {
                console.error('Error creating bill:', error);
                alert('An error occurred while creating the bill');
            }
        });

        // View bill details
        async function viewBillDetails(billId) {
            try {
                const response = await fetch(`/admin/billing/${billId}`);
                const bill = await response.json();
                
                const details = document.getElementById('billDetails');
                details.innerHTML = `
                    <div class="grid grid-cols-2 gap-4">
                        <div class="text-sm font-medium text-gray-500">Bill ID</div>
                        <div class="text-sm text-gray-900">${bill.billId}</div>
                        
                        <div class="text-sm font-medium text-gray-500">Homeowner</div>
                        <div class="text-sm text-gray-900">${bill.homeowner.firstName} ${bill.homeowner.lastName}</div>
                        
                        <div class="text-sm font-medium text-gray-500">Type</div>
                        <div class="text-sm text-gray-900">${bill.billType}</div>
                        
                        <div class="text-sm font-medium text-gray-500">Amount</div>
                        <div class="text-sm text-gray-900">â‚±${parseFloat(bill.amount).toFixed(2)}</div>
                        
                        <div class="text-sm font-medium text-gray-500">Paid Amount</div>
                        <div class="text-sm text-gray-900">â‚±${parseFloat(bill.amountPaid).toFixed(2)}</div>
                        
                        <div class="text-sm font-medium text-gray-500">Due Date</div>
                        <div class="text-sm text-gray-900">${new Date(bill.dueDate).toLocaleDateString()}</div>
                        
                        <div class="text-sm font-medium text-gray-500">Status</div>
                        <div class="text-sm text-gray-900">${bill.status}</div>
                    </div>
                `;
                
                showBillDetailsModal();
            } catch (error) {
                console.error('Error loading bill details:', error);
                alert('Failed to load bill details');
            }
        }

        // View payments
        async function viewPayments(billId) {
            try {
                const response = await fetch(`/admin/billing/${billId}/payments`);
                const payments = await response.json();
                // Implement payment details view
            } catch (error) {
                console.error('Error loading payments:', error);
                alert('Failed to load payment details');
            }
        }
    </script>
}