@model (List<Subdivision.Models.Forum> Forums, List<Subdivision.Models.Announcement> Announcements)

@{
    ViewData["Title"] = "Community";
    ViewData["UserType"] = "Admin";
    ViewData["Page"] = "Community";
    Layout = "_UniversalLayout";
}

@if (TempData["CommunityError"] != null)
{
    <div class="bg-red-50 border-l-4 border-red-500 p-4 mb-6">
        <div class="flex">
            <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-500" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                </svg>
            </div>
            <div class="ml-3">
                <p class="text-sm text-red-700">@TempData["CommunityError"]</p>
            </div>
        </div>
    </div>
}
else if (TempData["CommunitySuccess"] != null)
{
    <div class="bg-green-50 border-l-4 border-green-500 p-4 mb-6">
        <div class="flex">
            <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-green-500" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
            </div>
            <div class="ml-3">
                <p class="text-sm text-green-700">@TempData["CommunitySuccess"]</p>
            </div>
        </div>
    </div>
}

<div class="space-y-6">
    <div class="flex justify-between items-center">
        <div>
            <h2 class="text-2xl font-bold tracking-tight">Community Hub</h2>
            <p class="text-muted-foreground">Manage announcements and forum posts for the community.</p>
        </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <!-- Announcements Section -->
        <div class="md:col-span-1">
            <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                <div class="flex items-center justify-between p-6 border-b">
                    <h3 class="text-lg font-semibold">Announcements</h3>
                    <button class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-9 px-4" data-bs-toggle="modal" data-bs-target="#createAnnouncementModal">
                        <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                        </svg>
                        New
                    </button>
                </div>
                <div class="p-6 space-y-4">
                    @foreach (var announcement in Model.Item2)
                    {
                        <div class="rounded-lg border bg-background p-4 hover:bg-accent/50 transition-colors">
                            <div class="flex justify-between items-start mb-2">
                                <h4 class="font-medium">@announcement.Title</h4>
                                <span class="text-xs text-muted-foreground">@announcement.DateTimePosted.ToShortDateString()</span>
                            </div>
                            <p class="text-sm text-muted-foreground">@announcement.Description</p>
                        </div>
                    }
                    @if (!Model.Item2.Any())
                    {
                        <div class="text-center py-6 text-muted-foreground">
                            No announcements yet. Create one to get started.
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Forum Section -->
        <div class="md:col-span-2">
            <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                <div class="flex items-center justify-between p-6 border-b">
                    <h3 class="text-lg font-semibold">Community Forum</h3>
                    <button class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-9 px-4" data-bs-toggle="modal" data-bs-target="#createForumModal">
                        <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                        </svg>
                        New Post
                    </button>
                </div>
                <div class="p-6 space-y-6">
                    @foreach (var forum in Model.Item1)
                    {
                        <div class="rounded-lg border bg-background p-6 hover:bg-accent/50 transition-colors">
                            <div class="flex items-center space-x-4 mb-4">
                                <div class="h-10 w-10 rounded-full bg-primary/10 flex items-center justify-center">
                                    <span class="text-primary font-medium">A</span>
                                </div>
                                <div>
                                    <p class="font-medium">Admin</p>
                                    <p class="text-xs text-muted-foreground">@forum.DateTimePosted.ToShortDateString()</p>
                                </div>
                            </div>
                            <h4 class="text-lg font-semibold mb-2">@forum.ForumTitle</h4>
                            <p class="text-muted-foreground mb-4">@forum.Content</p>
                            @if (!string.IsNullOrEmpty(forum.ImagePath))
                            {
                                <img src="@forum.ImagePath" alt="Forum Image" class="rounded-lg max-w-full h-auto mb-4" />
                            }
                            
                            <!-- Forum Replies Section -->
                            <div class="mt-6 border-t pt-4">
                                <h5 class="text-sm font-semibold mb-4">Replies</h5>
                                <div class="space-y-4">
                                    @foreach (var reply in forum.ForumReplies.OrderByDescending(r => r.DateTime))
                                    {
                                        <div class="pl-4 border-l-2">
                                            <div class="flex items-center space-x-2 mb-1">
                                                <div class="h-8 w-8 rounded-full bg-gray-100 flex items-center justify-center">
                                                    <span class="text-sm font-medium">
                                                        @if (reply.AdminId != null) { <text>A</text> }
                                                        else if (reply.StaffId != null) { <text>S</text> }
                                                        else { <text>H</text> }
                                                    </span>
                                                </div>
                                                <div>
                                                    <p class="text-sm font-medium">
                                                        @if (reply.AdminId != null) { <text>Admin</text> }
                                                        else if (reply.StaffId != null) { <text>Staff</text> }
                                                        else { <text>Homeowner</text> }
                                                    </p>
                                                    <p class="text-xs text-muted-foreground">@reply.DateTime.ToShortDateString()</p>
                                                </div>
                                            </div>
                                            <p class="text-sm text-gray-600 pl-10">@reply.RepliedContent</p>
                                        </div>
                                    }
                                </div>
                                
                                <!-- Reply Form -->
                                <div class="mt-4">
                                    <form method="post" action="@Url.Action("AddForumReply", "Admin")" class="flex gap-2">
                                        <input type="hidden" name="forumId" value="@forum.ForumId" />
                                        <input type="text" name="content" class="flex-1 h-10 rounded-md border border-gray-300 px-3 py-2 text-sm" placeholder="Write a reply..." required />
                                        <button type="submit" class="inline-flex items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-white hover:bg-primary/90">
                                            Reply
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                    @if (!Model.Item1.Any())
                    {
                        <div class="text-center py-6 text-muted-foreground">
                            No forum posts yet. Create one to start the discussion.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Announcement Modal -->
<div id="createAnnouncementModal" class="fixed inset-0 z-50 hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <!-- Dark overlay -->
    <div class="fixed inset-0 bg-black bg-opacity-50" id="announcementModalOverlay"></div>
    
    <!-- Modal content -->
    <div class="fixed inset-0 z-50 flex items-center justify-center p-4">
        <div class="relative w-full max-w-lg transform rounded-lg bg-white shadow-xl" onclick="event.stopPropagation();">
            <div class="p-6">
                <div class="flex justify-between items-center pb-4 mb-4 border-b">
                    <h3 class="text-lg font-semibold text-gray-900">Create New Announcement</h3>
                    <button type="button" class="close-modal text-gray-400 hover:text-gray-500 focus:outline-none">
                        <span class="sr-only">Close</span>
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
                <form method="post" action="@Url.Action("CreateAnnouncement", "Admin")" class="space-y-4">
                    <div class="space-y-2">
                        <label for="announcementTitle" class="text-sm font-medium text-gray-700 dark:text-gray-200">Title</label>
                        <input type="text" class="flex h-10 w-full rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-3 py-2 text-sm text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500" id="announcementTitle" name="Title" required>
                    </div>
                    <div class="space-y-2">
                        <label for="announcementDescription" class="text-sm font-medium text-gray-700 dark:text-gray-200">Description</label>
                        <textarea class="flex min-h-[80px] w-full rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-3 py-2 text-sm text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500" id="announcementDescription" name="Description" rows="3" required></textarea>
                    </div>
                    <div class="flex justify-end space-x-2 pt-4">
                        <button type="button" class="close-modal inline-flex justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50">
                            Cancel
                        </button>
                        <button type="submit" class="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700">
                            Create Announcement
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Create Forum Modal -->
<div id="createForumModal" class="fixed inset-0 z-50 hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <!-- Dark overlay -->
    <div class="fixed inset-0 bg-black bg-opacity-50" id="forumModalOverlay"></div>
    
    <!-- Modal content -->
    <div class="fixed inset-0 z-50 flex items-center justify-center p-4">
        <div class="relative w-full max-w-lg transform rounded-lg bg-white shadow-xl" onclick="event.stopPropagation();">
            <div class="p-6">
                <div class="flex justify-between items-center pb-4 mb-4 border-b">
                    <h3 class="text-lg font-semibold text-gray-900">Create New Forum Post</h3>
                    <button type="button" class="close-modal text-gray-400 hover:text-gray-500 focus:outline-none">
                        <span class="sr-only">Close</span>
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
                <form method="post" action="@Url.Action("CreateForum", "Admin")" enctype="multipart/form-data" class="space-y-4">
                    <div class="space-y-2">
                        <label for="forumTitle" class="text-sm font-medium text-gray-700 dark:text-gray-200">Title</label>
                        <input type="text" class="flex h-10 w-full rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-3 py-2 text-sm text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500" id="forumTitle" name="ForumTitle" required>
                    </div>
                    <div class="space-y-2">
                        <label for="forumDescription" class="text-sm font-medium text-gray-700 dark:text-gray-200">Content</label>
                        <textarea class="flex min-h-[80px] w-full rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-3 py-2 text-sm text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500" id="forumDescription" name="Content" rows="3" required></textarea>
                    </div>
                    <div class="space-y-2">
                        <label for="forumImage" class="text-sm font-medium text-gray-700 dark:text-gray-200">Upload Image</label>
                        <input type="file" class="flex h-10 w-full rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-3 py-2 text-sm text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500" id="forumImage" name="image">
                    </div>
                    <div class="flex justify-end space-x-2 pt-4">
                        <button type="button" class="close-modal inline-flex justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50">
                            Cancel
                        </button>
                        <button type="submit" class="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700">
                            Create Post
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const modals = {
                announcement: document.getElementById('createAnnouncementModal'),
                forum: document.getElementById('createForumModal')
            };

            function toggleModal(modalElement, show) {
                if (!modalElement) return;
                
                modalElement.style.display = show ? 'block' : 'none';
                modalElement.classList[show ? 'remove' : 'add']('hidden');
                document.body.style.overflow = show ? 'hidden' : 'auto';

                if (!show) {
                    const form = modalElement.querySelector('form');
                    if (form) {
                        form.reset();
                        const fileInput = form.querySelector('input[type="file"]');
                        if (fileInput) fileInput.value = '';
                    }
                }
            }

            // Handle modal triggers
            document.querySelectorAll('[data-bs-target]').forEach(trigger => {
                trigger.addEventListener('click', (e) => {
                    e.preventDefault();
                    const targetId = trigger.getAttribute('data-bs-target').replace('#', '');
                    const modal = document.getElementById(targetId);
                    if (modal) toggleModal(modal, true);
                });
            });

            // Handle close buttons and cancel buttons
            document.querySelectorAll('.close-modal').forEach(button => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    const modal = button.closest('[id$="Modal"]');
                    if (modal) toggleModal(modal, false);
                });
            });

            // Handle overlay clicks
            Object.values(modals).forEach(modal => {
                if (!modal) return;
                
                modal.addEventListener('click', (e) => {
                    // Check if click is directly on the modal container or overlay
                    if (e.target === modal || e.target.id.endsWith('ModalOverlay')) {
                        toggleModal(modal, false);
                    }
                });
            });

            // Handle ESC key
            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') {
                    Object.values(modals).forEach(modal => {
                        if (modal && modal.style.display !== 'none') {
                            toggleModal(modal, false);
                        }
                    });
                }
            });

            // Ensure modals are hidden initially
            Object.values(modals).forEach(modal => {
                if (modal) toggleModal(modal, false);
            });
        });
    </script>
}
